; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Local_Input",
"class": "AI_Input",
"language": "GDScript",
"path": "res://src/pong/input/ai_input.gd"
}, {
"base": "PaddleBounce",
"class": "AngularBounce",
"language": "GDScript",
"path": "res://src/pong/bounce/angular_bounce.gd"
}, {
"base": "KinematicBody2D",
"class": "Ball",
"language": "GDScript",
"path": "res://src/pong/ball/ball.gd"
}, {
"base": "Line2D",
"class": "BallTrail",
"language": "GDScript",
"path": "res://src/pong/ball/ball_trail.gd"
}, {
"base": "Node2D",
"class": "Bounce",
"language": "GDScript",
"path": "res://src/pong/bounce/bounce.gd"
}, {
"base": "Node2D",
"class": "CollisionSfx",
"language": "GDScript",
"path": "res://src/pong/sfx/collision_sfx.gd"
}, {
"base": "PaddleBounce",
"class": "DifferentialBounce",
"language": "GDScript",
"path": "res://src/pong/bounce/differential_bounce.gd"
}, {
"base": "PopupPanel",
"class": "EndGamePopup",
"language": "GDScript",
"path": "res://src/pong/end_game_popup.gd"
}, {
"base": "Local_Input",
"class": "Game_Input",
"language": "GDScript",
"path": "res://src/pong/input/game_input.gd"
}, {
"base": "PaddleBounce",
"class": "GeometricBounce",
"language": "GDScript",
"path": "res://src/pong/bounce/geometric_bounce.gd"
}, {
"base": "Node",
"class": "Globals",
"language": "GDScript",
"path": "res://src/globals.gd"
}, {
"base": "Node2D",
"class": "GoalSfx",
"language": "GDScript",
"path": "res://src/pong/sfx/goal_sfx.gd"
}, {
"base": "Reference",
"class": "Local_Input",
"language": "GDScript",
"path": "res://src/pong/input/local_input.gd"
}, {
"base": "Node2D",
"class": "MobileInput",
"language": "GDScript",
"path": "res://src/mobile_inputs/mobile_input.gd"
}, {
"base": "PopupPanel",
"class": "MobileInputSelection",
"language": "GDScript",
"path": "res://src/main_menu/selection_popups/mobile_input_selection.gd"
}, {
"base": "MobileInput",
"class": "MobileOneHandInput",
"language": "GDScript",
"path": "res://src/mobile_inputs/mobile_input_one_hand.gd"
}, {
"base": "MobileInput",
"class": "MobileTwoHandInput",
"language": "GDScript",
"path": "res://src/mobile_inputs/mobile_input_two_hands.gd"
}, {
"base": "Reference",
"class": "NakamaAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaAPI.gd"
}, {
"base": "Reference",
"class": "NakamaAsyncResult",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaAsyncResult.gd"
}, {
"base": "Reference",
"class": "NakamaClient",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaClient.gd"
}, {
"base": "Reference",
"class": "NakamaException",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaException.gd"
}, {
"base": "Node",
"class": "NakamaHTTPAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaHTTPAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaLogger",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaLogger.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaRTAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTAPI.gd"
}, {
"base": "Reference",
"class": "NakamaRTMessage",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTMessage.gd"
}, {
"base": "Reference",
"class": "NakamaSerializer",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaSerializer.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaSession",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaSession.gd"
}, {
"base": "Reference",
"class": "NakamaSocket",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocket.gd"
}, {
"base": "Node",
"class": "NakamaSocketAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocketAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaStorageObjectId",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaStorageObjectId.gd"
}, {
"base": "Reference",
"class": "NakamaWriteStorageObject",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaWriteStorageObject.gd"
}, {
"base": "KinematicBody2D",
"class": "Paddle",
"language": "GDScript",
"path": "res://src/pong/paddle/paddle.gd"
}, {
"base": "Bounce",
"class": "PaddleBounce",
"language": "GDScript",
"path": "res://src/pong/bounce/paddle_bounce.gd"
}, {
"base": "PopupPanel",
"class": "PaddleSelection",
"language": "GDScript",
"path": "res://src/main_menu/selection_popups/paddle_selection.gd"
}, {
"base": "Control",
"class": "PongGame",
"language": "GDScript",
"path": "res://src/pong/pong_game.gd"
} ]
_global_script_class_icons={
"AI_Input": "",
"AngularBounce": "",
"Ball": "",
"BallTrail": "",
"Bounce": "",
"CollisionSfx": "",
"DifferentialBounce": "",
"EndGamePopup": "",
"Game_Input": "",
"GeometricBounce": "",
"Globals": "",
"GoalSfx": "",
"Local_Input": "",
"MobileInput": "",
"MobileInputSelection": "",
"MobileOneHandInput": "",
"MobileTwoHandInput": "",
"NakamaAPI": "",
"NakamaAsyncResult": "",
"NakamaClient": "",
"NakamaException": "",
"NakamaHTTPAdapter": "",
"NakamaLogger": "",
"NakamaRTAPI": "",
"NakamaRTMessage": "",
"NakamaSerializer": "",
"NakamaSession": "",
"NakamaSocket": "",
"NakamaSocketAdapter": "",
"NakamaStorageObjectId": "",
"NakamaWriteStorageObject": "",
"Paddle": "",
"PaddleBounce": "",
"PaddleSelection": "",
"PongGame": ""
}

[application]

config/name="p01_pong"
run/main_scene="res://src/main_menu/main_menu.tscn"
config/icon="res://icon.png"

[autoload]

Nakama="*res://addons/com.heroiclabs.nakama/Nakama.gd"
Network="*res://src/network/network.gd"
GameServer="*res://src/network/game_server.gd"
UserPreferences="*res://src/user_preferences.gd"
Netcode="*res://src/network/netcode.gd"

[debug]

settings/stdout/verbose_stdout=true
gdscript/warnings/treat_warnings_as_errors=true
gdscript/warnings/return_value_discarded=false
gdscript/warnings/unsafe_property_access=true
gdscript/warnings/unsafe_method_access=true
gdscript/warnings/unsafe_cast=true
gdscript/warnings/unsafe_call_argument=true
gdscript/warnings/standalone_ternary=false

[display]

window/size/width=1920
window/size/height=1080
window/stretch/mode="2d"
window/stretch/aspect="keep"

[input]

ui_accept={
"deadzone": 0.5,
"events": [  ]
}
ui_select={
"deadzone": 0.5,
"events": [  ]
}
ui_cancel={
"deadzone": 0.5,
"events": [  ]
}
ui_focus_next={
"deadzone": 0.5,
"events": [  ]
}
ui_focus_prev={
"deadzone": 0.5,
"events": [  ]
}
ui_left={
"deadzone": 0.5,
"events": [  ]
}
ui_right={
"deadzone": 0.5,
"events": [  ]
}
ui_up={
"deadzone": 0.5,
"events": [  ]
}
ui_down={
"deadzone": 0.5,
"events": [  ]
}
ui_page_up={
"deadzone": 0.5,
"events": [  ]
}
ui_page_down={
"deadzone": 0.5,
"events": [  ]
}
ui_home={
"deadzone": 0.5,
"events": [  ]
}
ui_end={
"deadzone": 0.5,
"events": [  ]
}
1_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
1_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
1_charge={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
2_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"unicode":0,"echo":false,"script":null)
 ]
}
2_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777234,"unicode":0,"echo":false,"script":null)
 ]
}
2_charge={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"unicode":0,"echo":false,"script":null)
 ]
}
0_move_to={
"deadzone": 0.5,
"events": [  ]
}
1_move_to={
"deadzone": 0.5,
"events": [  ]
}

[layer_names]

2d_physics/layer_1="Paddle"
2d_physics/layer_2="Ball"
2d_physics/layer_3="Wall"
2d_physics/layer_4="Goal"

[locale]

locale_filter=[ 0, [  ] ]

[rendering]

environment/default_clear_color=Color( 0.14902, 0.172549, 0.231373, 1 )
environment/default_environment="res://default_env.tres"
